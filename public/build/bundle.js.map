{"version":3,"file":"bundle.js","sources":["../../node_modules/.pnpm/svelte@3.29.0/node_modules/svelte/internal/index.mjs","../../node_modules/.pnpm/svelte@3.29.0/node_modules/svelte/store/index.mjs","../../node_modules/.pnpm/svelte-spa-router@3.0.3_svelte@3.29.0/node_modules/svelte-spa-router/Router.svelte","../../node_modules/.pnpm/regexparam@1.3.0/node_modules/regexparam/dist/regexparam.mjs","../../src/data.js","../../src/halaman/Tes.svelte","../../src/halaman/Atur.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {Object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        window.history.replaceState(undefined, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n    node.addEventListener('click', scrollstateHistoryHandler)\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {HTMLElementEventMap} event - an onclick event attached to an anchor tag\n */\nfunction scrollstateHistoryHandler(event) {\n    // Prevent default anchor onclick behaviour\n    event.preventDefault()\n    const href = event.currentTarget.getAttribute('href')\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {createEventDispatcher, afterUpdate} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, remove it before we run the matching\n        if (prefix) {\n            if (typeof prefix == 'string' && path.startsWith(prefix)) {\n                path = path.substr(prefix.length) || '/'\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {Object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\n\nif (restoreScrollState) {\n    window.addEventListener('popstate', (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    })\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.scrollX, previousScrollState.scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nloc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n        \n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name\n        }))\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n})\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","export const data = [\n    [\"berpartisipasi pada pelatihan memberikan <strong>pertolongan pertama pada kecelakaan ringan.</strong>\", \"senang mempelajari cara <strong>mengenali, mencegah & mengobati penyakit tertentu.</strong>\", \"ingin mengetahui lebih banyak tentang <strong>stetoskop, tensimeter, thermometer, dll.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>sistem kekebalan tubuh manusia.</strong>\", \"senang mempelajari <strong>sistem syaraf, reproduksi, peredaran darah atau pernafasan manusia.</strong>\", \"bisa menjelaskan <strong>fungsi/proses pada jantung, paru-paru, ginjal, hati, atau usus manusia.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>cara merawat orang sakit.</strong>\", \"bisa menjelaskan cara supaya <strong>tubuh sehat dan bugar.</strong>\", \"bisa menjelaskan apa yang dilakukan jika ada yang <strong>demam ringan, pileks, atau batuk.</strong>\"],\n    [\"bersedia menjadi tim yang membuat <strong>antibiotik bagi tubuh manusia.</strong>\", \"senang mempelajari tentang <strong>tanaman, bahan-bahan atau sesuatu yang bisa dijadikan obat.</strong>\", \"senang diajak meneliti <strong>khasiat dari jahe, kunyit, temulawak bagi kesehatan.</strong>\"],\n    [\"berpartisipasi seminar memilih <strong>makanan yang sesuai dengan kebutuhan tubuh.</strong>\", \"senang mempelajari tentang <strong>kandungan protein, karbohidrat, vitamin, zat besi, omega 3</strong><strong> </strong>dari makanan/minuman tertentu.\", \"bersedia menjadi tim meneliti <strong>kandungan nutrisi suatu sayuran, buahan maupun daging.</strong>\"],\n    [\"berpartisipasi pada tim yang mensurvey <strong>kebersihan suatu lingkungan (daerah).</strong>\", \"senang mempelajari tentang <strong>pola hidup sehat.</strong>\", \"bersedia menjadi tim yang memikirkan strategi supaya <strong>masyarakat lebih banyak mengkonsumsi sayuran, buahan & air putih.</strong>\"],\n    [\"berpartisipasi seminar <strong>cara mengenali, mencegah, mengobati penyakit gusi & mulut.</strong>\", \"senang mempelajari <strong>cara memelihara gigi supaya sehat, kuat & bersih.</strong>\", \"ingin mengetahui lebih bayak tentang <strong>alat-alat kedokteran gigi.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>temuan terbaru kromosom.</strong>\", \"senang mempelajari tentang <strong>sel, mikroba, atau virus.</strong>\", \"bersedia menjadi tim yang meneliti <strong>manfaat suatu bakteri.</strong>\"],\n    [\"senang <strong>memelihara atau merawat binatang.</strong>\", \"bisa menjelaskan <strong>bagian & fungsi tubuh hewan.</strong>\", \"bersedia menjadi tim yang meneliti <strong>sistem peredaran darah suatu hewan.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>memilih pakan ternak yang bermutu tinggi.</strong>\", \"senang mempelajari tentang <strong>pengembangbiakan ikan, cumi-cumi </strong>atau <strong>kepiting.</strong>\", \"bersedia menjadi tim yang membuat <strong>antibiotik bagi unggas.</strong>\"],\n    [\"berpartisipasi pada seminar mengenali, mencegah, mengobati <strong>penyakit hewan kesayangan.</strong>\", \"senang mempelajari tentang bagaimana membuat <strong>hewan menjadi sehat dan kuat.</strong>\", \"menjadi tim yang mengobati <strong>hewan yang sakit.</strong>\"],\n    [\"senang memelihara atau merawat <strong>tanaman.</strong>\", \"bisa menjelaskan <strong>bagian dan fungsi tumbuhan.</strong>\", \"menjadi bagian tim yang mengembangkan <strong>tumbuhan langka.</strong>\"],\n    [\"berpartisipasi pada pelajatihan meningkatkan <strong>kualitas hasil buah-buahan dan sayur-sayuran.</strong>\", \"senang mempelajari tentang <strong>pengembangbiakan kol, cabe, kentang, jagung atau bawang.</strong>\", \"bersedia menjadi tim yang membuat <strong>pupuk bagi kesuburan tanah.</strong>\"],\n    [\"berpartisipasi pada pelatihan cara menanam <strong>sawit.</strong>\", \"senang diajarkan cara menanam, merawat, maupun memetik <strong>cengkeh.</strong>\", \"bersedia menjadi bagian tim yang membuat antibiotik bagi ketahanan <strong>karet.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>memanfaatkan hasil-hasil hutan.</strong>\", \"senang mempelajari tentang bagaimana melestarikan <strong>hutan-hutan Indonesia.</strong>\", \"bersedia menjadi tim yang membudidayakan <strong>pohon untuk tanaman hutan.</strong>\"],\n    [\"berpartisipasi pada seminar teknologi terkini <strong>pengolahan lahan pertanian.</strong>\", \"senang membaca tentang <strong>alat-alat pertanian.</strong>\", \"bersedia menjadi tim yang meneliti metode baru <strong>merawat hasil-hasil pertanian pasca panen.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>pemanfaatan hasil-hasil laut.</strong>\", \"senang membaca atau berdiskusi tentang <strong>biota di dasar laut.</strong>\", \"bersedia menjadi tim yang meneliti <strong>ekosistem di sebuah pantai.</strong>\"],\n    [\"berpartisipasi pada kampanye <strong>menyelamatkan bumi dari pemanasan global.</strong>\", \"senang mempelajari tentang <strong>keanekaragaman hayati di sebuah ekosistem.</strong>\", \"bersedia menjadi tim yang memeriksa <strong>kondisi tanah, air atau udara </strong>di sebuah tempat.\"],\n    [\"berpartisipasi pada seminar dampak <strong>perubahan iklim </strong>terhadap kehidupan di bumi.\", \"senang membaca tentang <strong>cuaca.</strong>\", \"bersedia saat diajak ke <strong>Badan Meteorologi dan Geofisika </strong>untuk melihat proses disana.\"],\n    [\"berpartisipasi pada seminar temuan terbaru <strong>planet di tata surya.</strong>\", \"senang mempelajari tentang <strong>benda-benda luar angkasa.</strong>\", \"bersedia menjadi tim yang meneliti tentang <strong>UFO, meteor, bintang.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>‘temuan terbaru teori realitivitas energi’.</strong>\", \"senang mempraktikkan <strong>teori atau eksperimen Fisika dalam kehidupan sehari-hari.</strong>\", \"senang membaca <strong>materi Fisika </strong>yang belum diajarkan.\"],\n    [\"berpartisipasi pada seminar temuan terbaru di bidang <strong>atom.</strong>\", \"bersedia menjadi tim yang mensurvey <strong>kualitas energi nuklir untuk PLTN di suatu tempat.</strong>\", \"memilih menghadiri diskusi tentang memanfaatkan <strong>nuklir untuk kepentingan damai.</strong>\"],\n    [\"berpartisipasi pada seminar teknologi terkini pada bidang <strong>HP, TV atau radio.</strong>\", \"senang mempelajari tentang cara membuat <strong>robot elektronik.</strong>\", \"bersedia menjadi tim membuat <strong>aliran listrik dari air terjun, sungai, tenaga surya atau angin.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>memperbaiki TV, radio, setrika, atau tape </strong>yang rusak.\", \"bisa menjelaskan <strong>nama/fungsi dari benda elektronik tertentu.</strong>\", \"senang <strong>mengotak-atik benda elektronik </strong>tertentu.\"],\n    [\"berpartisipasi pada pelatihan membuat <strong>desain mesin mobil yang canggih.</strong>\", \"senang mempelajari tentang <strong>teknologiterkini kendaraan bermotor.</strong>\", \"senang sekali jika diajak untuk membuat <strong>sepeda elektronik.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>cara memperbaiki mobil/motor yang bermasalah.</strong>\", \"bisa menjelaskan tentang nama/fungsi <strong>komponen kendaraan bermotor.</strong>\", \"senang <strong>memodifikasi motor/mobil.</strong>\"],\n    [\"memilih menjadi bagian tim yang membuat <strong>alat penyaring air.</strong>\", \"senang memikirkan cara membuat <strong>mesin yang bermanfaat bagi kehidupan.</strong>\", \"bersedia saat diajak membuat <strong>alat pengolah sampah</strong>.\"],\n    [\"berpartisipasi pada seminar <strong>teknologi terkini di bidangkapal selam.</strong>\", \"senang mempelajari tentang <strong>teknologi mesin perkapalan.</strong>\", \"memilih menjadi bagian tim yang membuat <strong>speed boat elektronik.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>menjadi nahkoda kapal.</strong>\", \"senang diajak <strong>berlayar </strong>ke berbagai tempat.\", \"memiliki cita-cita menjadi <strong>pelaut.</strong>\"],\n    [\"berpartisipasi pada seminar teknologi terkini di bidang <strong>kedirgantaraan (industry pesawat).</strong>\", \"senang mempelajari tentang <strong>pesawat terbang atau apollo.</strong>\", \"bersedia menjadi tim yang membuat <strong>helikopter mini.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>mengendarai helikopter.</strong>\", \"senang saat diajak <strong>keliling </strong>Indonesia dengan pesawat.\", \"memiliki cita-cita menjadi <strong>pilot.</strong><strong><u></u></strong>\"],\n    [\"berpartisipasi pada pelatihan menjadi <strong>staf </strong>suatu <strong>maskapai penerbangan.</strong>\", \"mempelajari pengelolaan <strong>maskapai penerbangan.</strong>\", \"berniat menjadi <strong>pramugara (I).</strong>\"],\n    [\"berpartisipasi pada seminar <strong>‘temuan terbaru teorama phytagoras’.</strong>\", \"senang mempelajari <strong>materi matematika </strong>yang belum diajarkan.\", \"bersedia menjadi tim yang mengembangkan <strong>model baru persamaan kuadrat.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>temuan terbaru di bidang statistik.</strong>\", \"bersedia menjadi tim yang <strong>mendata jumlah suatu penduduk.</strong>\", \"bisa menjelaskan tentang <strong>mean, median, modus, frekuensi atau korelasi.</strong>\"],\n    [\"berpartisipasi pada pelatihan cara menggunakan <strong>bahasa pemrograman tertentu.</strong>\", \"ingin membuat aplikasi, seperti: <strong>facebook, twitter, Microsoft Office.</strong>\", \"bersedia menjadi tim yang membuat atau mengelola <strong>website sekolah.</strong>\"],\n    [\"berpartisipasi pada pelatihan cara membuat <strong>jaringan antar komputer.</strong>\", \"menjadi bagian tim yang membuat <strong>jaringan internet dari panic bagi warga.</strong>\", \"senang mengamati <strong>teknologi terkini motherboard, memory, CPU.</strong>\"],\n    [\"berpartisipasi pada pelatihan cara <strong>membuat desain/gambar suatu tempat, </strong>seperti taman bermain anak-anak, taman kota, jogging track.\", \"senang mempelajari tentang <strong>desain bangunan, seperti rumah, gedung, jembatan.</strong>\", \"bersedia menjadi tim yang <strong>merancang desain (gambar) kompleks bangunan, seperti: perkantoran, sekolah, pusat perbelanjaan </strong>yang baru.\"],\n    [\"bersedia menjadi tim yang mensurvey <strong>lokasi sarana dan prasarana kabupaten yang baru dibentuk.</strong>\", \"senang mempelajari cara mengelola <strong>(strategi) sebuah kawasan sehingga maju baik secara fisik, ekonomi maupun budaya.</strong>\", \"bersedia menjadi yang memikirkan memperbaiki <strong>tata kota yang semberaut.</strong>\"],\n    [\"berpartisipasi pada tim yang membuat <strong>rumah tahan gempa.</strong>\", \"senang mempelajari tentang cara, alat dan bahan membuat suatu <strong>bangunan (konstruksi).</strong>\", \"bersedia saat diajarkan cara membuat <strong>jalan, irigasi, bendungan, gedung maupun bandara.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>pembangunan yang berwawasan lingkungan.</strong>\", \"senang mempelajari tentang bagaimana membuat <strong>bangunan fisik yang ramah lingkungan.</strong>\", \"bersedia menjadi tim yang membuat <strong>lingkungan menjadi hijau dan bersih.</strong>\"],\n    [\"berpartisipasi pada seminar teori terbaru <strong>pembentukan daratan & lautan Indonesia.</strong>\", \"senang mempelajari tentang <strong>gunung, lembah, laut, samudera maupun sungai.</strong>\", \"memahami <strong>simbol-simbol peta.</strong><em></em>\"],\n    [\"berpartisipasi pada seminar temuan terbaru <strong>bentuk & lapisan yang menyusun bumi.</strong>\", \"senang mempelajari tentang <strong>kandungan-kandungan yang ada di dalam perut bumi.</strong>\", \"bersedia menjadi tim yang meneliti <strong>jenis-jenis batuan </strong>di suatu lokasi.\"],\n    [\"menjadi tim yang meneliti <strong>pola keruangan (bentuk) suatu wilayah.</strong>\", \"senang membaca tentang <strong>sistem informasi geografi atau penginderaan jauh.</strong>\", \"bersedia menjadi tim yang <strong>memetakan tanah </strong>sebelum digunakan sebagai lahan.\"],\n    [\"berpartisipasi pada seminar <strong>‘memanfaatkan tenaga panas bumi untuk kehidupan’.</strong>\", \"menjadi bagian tim yang membuat <strong>alat pendeteksi gempa bumi.</strong>\", \"bersedia menjadi tim yang membuat <strong>aliran listrik dari tenaga uap.</strong>\"],\n    [\"bepartisipasi pada seminar <strong>cadangan minyak Indonesia.</strong>\", \"senang mempelajari tentang <strong>pembentukan maupun eksplorasi minyak dari perut bumi.</strong>\", \"bersedia menjadi tim yang meneliti <strong>kandungan gas alam </strong>di daerah kami.\"],\n    [\"berpartisipasi pada seminar <strong>kekayaan sumber daya mineral Indonesia.</strong>\", \"senang mempelajari tentang <strong>pembentukan maupun eksplorasi tambang (emas, timah, besi) dari perut bumi.</strong>\", \"bersedia menjadi bagian tim yang meneliti <strong>kadar batubara di suatu wilayah.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>teknologi terkini pengolahan plastic, keramik maupun timah.</strong>\", \"senang mempelajari tentang <strong>mengolah perak, magan, besi menjadi benda bermanfaat.</strong>\", \"bersedia menjadi bagian tim yang <strong>mengolah alumunium menjadi benda pakai.</strong>\"],\n    [\"berpartisipasi pada seminar temuan terbaru <strong>sistem periodik unsur.</strong>\", \"senang mempelajari/mempraktikkan <strong>teori Kimia </strong>dari buku.\", \"bersedia menjadi tim yang meneliti tentang <strong>rantai karbon.</strong>\"],\n    [\"menjadi tim bereksperimen mengolah <strong>kayu menjadi bubuk kertas sehingga menjadi kertas.</strong>\", \"senang jika diajak membuat suatu <strong>pupuk dari bahan kimia.</strong>\", \"bersedia menjadi tim yang mengolah <strong>minyak mentah menjadi bensin, avtur atau pertamax.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>esensi dari kehidupan, tuhan atau manusia.</strong>\", \"senang mencari <strong>hikmah di balik sebuah kejadian </strong>baik pada diri saya, orang lain, masyarakat maupun alam semesta.\", \"senang membaca buku karya <strong>orang terkenal, </strong>seperti: Aristoteles, Nietze, Karl Max, Tan Malaka, Sukarno.\"],\n    [\"berpartisipasi pada seminar cara membuat <strong>umat manusia patuh pada perintah tuhan.</strong>\", \"senang membaca atau berdiskusi tentang <strong>keyakinan yang saya anut.</strong>\", \"bersedia menyebarkan <strong>agama yang saya anut.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>cara memahami diri sendiri maupun orang lain dengan baik.</strong>\", \"senang membaca atau berdiskusi tentang <strong>kepribadian, jiwa, emosi, motivasi, karakter, dll.</strong>\", \"senang mendengarkan <strong>curhatan hati teman </strong>atau <strong>mengamati perilaku orang lain.</strong>\"],\n    [\"berpartisipasi pada pelatihan cara <strong>berkomunikasi dengan baik </strong>di hadapan khalayak ramai.\", \"bisa menjelaskan <strong>tips berbicara </strong>yang sesuai orang, waktu atau keadaan.\", \"bersedia menjadi <strong>moderator, pembaca acara, MC, juru bicara </strong>pada sebuah acara/kegiatan.\"],\n    [\"berpartisipasi pada seminar mengoptimalkan <strong>tumbuh kembang anak usia dini.</strong>\", \"senang bermain, bercerita atau mengasuh <strong>anak-anak kecil.</strong>\", \"bersedia saat diminta menjadi <strong>asisten guru TK.</strong>\"],\n    [\"berpartisipasi kampanye menyadarkan masyarakat tentang kepedulian <strong>pada anak-anak berkebutuhan khusus.</strong>\", \"senang mempelajari tentang <strong>anak autism, ADHD, tuna grahita, down syndrome, dll.</strong>\", \"berniat membuat sekolah, klinik, atau rumah singgah bagi <strong>anak-anak yang memiliki kelainan.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>meningkatkan kualitas pendidikan Indonesia.</strong>\", \"senang berdiskusi tentang bagaimana <strong>meningkatkan semangat belajar.</strong>\", \"bersedia menjadi tim yang mengampanyekan <strong>‘penanaman minat baca sejak dini’.</strong>\"],\n    [\"berpartisipasi pada <strong>pelatihan kepemimpinan.</strong>\", \"senang membuat <strong>perencanaan, melaksanakan & mengevaluasinya.</strong>\", \"senang terlibat <strong>aktif di suatu organisasi.</strong>\"],\n    [\"berpartisipasi pada seminar cara <strong>mengelola sebuah usaha.</strong>\", \"senang berdiskusi tentang hal-hal apa saja yang <strong>layak dijadikan bisnis.</strong>\", \"ingin memiliki <strong>usaha pribadi.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>‘arah kebijakan Export Import Indonesia’.</strong>\", \"senang dengan sesuatu yang berhubungan dengan <strong>pertumbuhan ekonomi, PDB, valuta asing, saham atau kurs.</strong>\", \" senang membaca, mengamati atau berdiskusi tentang <strong>perkembangan ekonomi dunia.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>‘Rancangan Anggaran dan Pendapatan Belanja Negara’.</strong>\", \"senang berdiskusi tentang cara mengoptimalkan <strong>pendapatan Negara.</strong>\", \"ingin mengetahui lebih banyak tentang <strong>perpajakan.</strong>\"],\n    [\"bersedia menjadi tim yang memeriksa <strong>laporan keuangan </strong>OSIS.\", \"senang dengan sesuatu berhubungan dengan <strong>Akuntansi.</strong>\", \"bersedia menjadi tim yang membuat <strong>anggaran perjalanan wisata sekolah.</strong>\"],\n    [\"pelatihan cara <strong>mengelola keuangan </strong>yang efektif dan efisien.\", \"senang dengan sesuatu berhubungan dengan <strong>pengelolaan keuangan.</strong>\", \"senang berdiskusikan tentang bagaimana <strong>memaksimalkan pemasukan dan meminimalkan pengeluaran.</strong>\"],\n    [\"memilih berpartisipasi seminar perkembangan <strong>perbankan syariah di Indonesia.</strong>\", \"senang jika diajarkan tentang proses pemberian <strong>pinjaman atau kresit </strong>di sebuah bank\", \"bisa menjelaskan tentang <strong>valuta asing, kurs atau deposito.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>‘munculnya negara adidaya baru’.</strong>\", \"senang mengamati, membaca atau berdiskusi tentang <strong>perkembangan politik, ekonomi, sosial, militer dunia internasional (antar bangsa).</strong>\", \"ingin membuat Indonesia menjadi <strong>negara yang disenangi/berperan aktif di mata internasional.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>pelaksanaan otonomi daerah.</strong>\", \"senang mengamati atau berdiskusi tentang <strong>kebijakan terkini yang dibuat oleh pemerintah.</strong>\", \"bersedia menjadi bagian tim yang mengampanyekan <strong>pemerintahan yang bersih (bersih KKN).</strong>\"],\n    [\"berpartisipasi pada seminar tentang <strong>peta kekuatan partai-partai saat ini.</strong>\", \"senang berdiskusi tentang siapa yang mungkin menjadi <strong>bupati, walikota atau gubernur di daerah kami.</strong>\", \"bisa menjelaskan strategi untuk <strong>terpilih menjadi anggota dewan.</strong>\"],\n    [\"berpartisipasi pada <strong>diskusi Amandemen UUD 1945.</strong>\", \"bersedia menjadi tim yang membuat <strong>peraturan bagi kelas, sekolah atau wilayah sekitar.</strong>\", \"senang mempelajari tentang <strong>penerapan hukum di Indonesia.</strong>\"],\n    [\"berpartisipasi pada diskusi cara mengurangi <strong>tingkat kriminalitas dalam masyarakat.</strong>\", \"senang jika diajarkan cara mengungkap <strong>dalang di balik suatu kejahatan.</strong>\", \"bersedia menjadi tim yang menyelidiki <strong>kasus pencurian.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>‘menjadi Inteligen remaja’.</strong>\", \"senang mempelajari tentang <strong>dunia detektif.</strong>\", \"bersedia disusupkan sebagai <strong>agen rahasia </strong>ke sebuah tempat untuk mengumpulkan informasi penting.\"],\n    [\"berpartisipasi pada <strong>membaca makna dari suatu simbol huruf, lambang, angka tertentu.</strong>\", \"senang diajarkan cara memecahkan tentang <strong>kode </strong>tertentu.\", \"bersedia menjadi tim yang memecahkan <strong>misteri dari suatu peta atau petunjuk.</strong>\"],\n    [\"berpartisipasi pada <strong>kegiatan Pramuka atau Paskibraka.</strong>\", \"merasa bersemangat saat mendengarkan <strong>lagu Indonesia Raya maupun lagu nasional lainnya.</strong>\", \"senang berdiskusi tentang meningkatkan <strong>rasa cinta tanah air pada generasi muda.</strong>\"],\n    [\"berpartisipasi pada <strong>pelatihan ala militer (wajib militer).</strong>\", \"bersedia <strong>mengorbankan jiwa dan raga </strong>demi keutuhan Negara Kesatuan Republik Indonesia (NKRI).\", \"bersedia menjadi <strong>pasukan cadangan </strong>jika Indonesia diserang musuh.\"],\n    [\"berpartisipasi pada <strong>lomba olahraga </strong>yang digemari.\", \"bersedia menjadi <strong>wasit atau mengajarkan olahraga yang digemari.</strong>\", \"ingin <strong>mendalami olahraga </strong>yang digemari.\"],\n    [\"berpartisipasi pada seminar <strong>‘meningkatkan kesejahteraan rakyat’.</strong>\", \"bersedia menjadi <strong>relawan ke sebuah daerah bencana.</strong>\", \"ingin <strong>membuat panti/rumah singgah </strong>bagi orang yang terlantar.\"],\n    [\"bersedia menjadi tim meneliti <strong>kehidupan di sebuah desa terpencil.</strong>\", \"senang berdiskusi tentang <strong>perkembangan (dinamika) masyarakat saat ini.</strong>\", \"bisa menjelaskan pola <strong>hidup/karakter </strong>dari golongan, kabupaten atau budaya tertentu di Indonesia.\"],\n    [\"berpartisipasi pada kampanye melestarikan <strong>budaya leluhur kita.</strong>\", \"senang berdiskusi tentang <strong>suku-suku tradisional (pedalaman).</strong>\", \"senang membaca tentang <strong>tradisi asli Indonesia.</strong>\"],\n    [\"berpartisipasi pada kampanye <strong>melestarikan bahasa daerah.</strong>\", \"mempelajari <strong>bahasa nusantara, </strong>seperti: Jawa, Minang, Minahasa, Batak, Melayu, Bugis.\", \"menjadi tim yang mengumpulkan <strong>sastra/tata bahasa </strong>suatu bahasa tradisional Indonesia untuk dijadikan buku.\"],\n    [\"berpartisipasi pada diskusi menjadikan <strong>budaya tradisional sebagai asset pariwisata.</strong>\", \"senang berdiskusi tentang cara <strong>menarik turis suoaya berkunjung ke Indonesia.</strong>\", \"ingin berkunjung ke <strong>tempat-tempat menarik di Indonesia atau dunia.</strong>\"],\n    [\"berpartisipasi pada seminar <strong>teori terbaru asal usul nenek moyang bangsa Indonesia.</strong>\", \"bersedia menjadi tim yang meneliti <strong>fakta di balik sebuah peristiwa bersejarah.</strong>\", \"senang membaca tentang <strong>Peradaban Kuno (Yunani, Romawi, Persia, Cina, India).</strong>\"],\n    [\"menjadi tim mengeksplorasi keberadaan <strong>arca, mumi atau barang-barang kuno.</strong>\", \"senang mempelajari tentang <strong>manusia purba beserta kehidupannya.</strong>\", \"bersedia menjadi tim yang memugar sebuah <strong>candi.</strong>\"],\n    [\"berpartisipasi pada pelatihan berkomunikasi <strong>bahasa asing yang (digemari).</strong>\", \"senang mempelajari tentang <strong>tata bahasa bahasa asing tertentu (digemari).</strong>\", \"bisa mengajarkan cara <strong>menulis kata sederhana dari bahasa asing yang digemari.</strong>\"],\n    [\"berpartisipasi pada <strong>festival kebudayaan negara asing yang (digemari).</strong>\", \"senang dengan <strong>pakaian atau benda-benda dari negara tertentu yang (digemari).</strong>\", \"ingin mengunjungi & tinggal di <strong>sebuah negara tertentu untuk melihat pola hidup mereka.</strong>\"],\n    [\"berpartisipasi pada lomba membuat <strong>cerita pendek (cerpen).</strong>\", \"senang membuat <strong>puisi, prosa atau pantun.</strong>\", \"ingin membuat <strong>novel atau buku.</strong>\"],\n    [\"menjadi bagian tim yang tampil membawakan <strong>lagu pada festival musik.</strong>\", \"senang <strong>bernyanyi, mendengarkan musik atau bermain alat musik.</strong>\", \"senang membuat <strong>lagu.</strong>\"],\n    [\"bersedia menjadi bagian tim yang menampilkan <strong>drama pada acara sekolah.</strong>\", \"bersedia menjadi <strong>sutradara (pengarah acara) untuk sebuah pertunjukan.</strong>\", \"bersedia membuat <strong>naskah suatu drama.</strong>\"],\n    [\"menjadi bagian yang menampilkan <strong>tarian tertentu pada acara sekolah.</strong>\", \"bersedia mengajarkan <strong>tarian yang dikuasai pada anak-anak kecil.</strong>\", \"ingin mempelajari <strong>tari kreasi baru, barat maupun internasional.</strong>\"],\n    [\"berpartisipasi pada <strong>pelatihan cara memotret yang baik dan tepat.</strong>\", \"senang diajak ke sebuah <strong>tempat atau acara untuk memotret sesuatu.</strong>\", \"senang berdiskusi tentang cara meningkatkan <strong>kualitas hasil poto.</strong>\"],\n    [\"berpartisipasi pada pelatihan cara membuat <strong>naskah film.</strong>\", \"bersedia menjadi tim yang membuat <strong>film dokumenter.</strong>\", \"senang berdiskusi tentang <strong>film tertentu.</strong>\"],\n    [\"berpartisipasi pada <strong>pelatihan ‘menjadi reporter remaja’.</strong>\", \"bersedia menjadi <strong>editor bulletin atau majalah sekolah.</strong>\", \"ingin <strong>magang di radio atau televise lokal.</strong>\"],\n    [\"berpartisipasi diskusi cara membuat <strong>masyarakat mau berkunjung ke perpustakaan.</strong>\", \"senang berkunjung <strong>ke perpustakaan.</strong>\", \"bersedia tim yang akan <strong>menyusun buku berdasarkan nomor urut di perpustakaan.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>membuat surat menyurat </strong>untuk berbagai keperluan.\", \"mempelajari cara membuat <strong>proposal untuk suatu kegiatam.</strong>\", \"bersedia menjadi <strong>sekretaris </strong>atau <strong>notulen </strong>untuk suatu kegiatan.\"],\n    [\"berpartisipasi pada pelatihan <strong>mendekorasi sebuah panggung pesta/acara.</strong>\", \"senang mempelajari tentang cara <strong>mendesain sebuah ruangan supaya menarik.</strong>\", \"bisa memberikan rekomendasi <strong>bentuk maupun tata letak suatu benda pada sebuah tempat.</strong>\"],\n    [\"berpartisipasi pada pelatihan membuat <strong>film animasi.</strong>\", \"senang mempelajari bagaimana membuat <strong>komik atau karikatur.</strong>\", \"bersedia saat diminta mmebuat <strong>poster </strong>untuk kegiatan sekolah.\"],\n    [\"senang <strong>melukis.</strong>\", \"senang saat diajak membuat pot, guci atau benda lain dari <strong>tanah liat.</strong>\", \"bersedia menjadi tim yang membuat patung dari <strong>bongkahan es.</strong>\"],\n    [\"berpartisipasi pada pelatihan memanfaatkan <strong>benda yang tidak dipakai lagi supaya bermanfaat.</strong>\", \"senang mempelajari atau membuat <strong>kerajinan tangan </strong>tertentu.\", \"senang saat diajak untuk membuat <strong>anyaman dari bambu.</strong>\"],\n    [\"memilih berpartisipasi pada pelatihan <strong>tat arias pengantin.</strong>\", \"bisa memberikan rekomendasi tentang <strong>make up yang cocok </strong> bagi acara atau orang tertentu.\", \"bersedia saat diminta untuk <strong>mendandan </strong>seseorang.\"],\n    [\"senang mempelajari atau membuat <strong>desain suatu busana.</strong>\", \"bisa memberikan rekomendasi <strong>pakaian yang cocok </strong>untuk orang atau acara tertentu.\", \"memilih berpartisipasi pada pelatihan cara membuat <strong>corak bagi pakaian.</strong>\"],\n    [\"berpartisipasi pada pelatihan <strong>cara membuat border pakaian.</strong>\", \"senang <strong>menjahit.</strong>\", \"bisa memperbaiki jika ada <strong>pakaian yang rusak.</strong>\"],\n    [\"berpartisipasi pelatihan membuat <strong>beranekaragam minuman.</strong>\", \"senang mempelajari atau membuat <strong>masakan</strong> tertentu.\", \"bersedia diminta untuk menata <strong>hidangan </strong>pada suatu kegiatan.\"]\n]","<div class=\"header\">\n\t<ul class=\"pagination justify-content-center tanpa-garis\">\n\t\t{#if terkumpul.length <= 7}\n\t\t\t{#each Array(7) as _, n}\n\t\t\t\t<li class={terkumpul.length >= n + 1 ? 'active page-item' : 'page-item'}>\n\t\t\t\t\t<div class=\"page-link\">&nbsp;</div>\n\t\t\t\t</li>\n\t\t\t{/each}\n\t\t\t{#if terkumpul.length == 7}\n\t\t\t\t<li class=\"page-item\"><a href=\"#/atur\" class=\"page-link\" on:click={simpan}>Lanjut...</a></li>\n\t\t\t{/if}\n\t\t{:else}\n\t\t\t<li class=\"page-item\"><div class=\"page-link\">Kelebihan</div></li>\n\t\t{/if}\n\t</ul>\n</div>\n<div class=\"isi\">\n\t<br>\n\t{#each Array(9) as _, n}\n\t\t{#if params.halaman == n + 1}\n\t\t\t<table class=\"table table-bordered\">\n\t\t\t\t{#each Array(11) as _, o}\n\t\t\t\t\t<tr class={terkumpul.includes(n * 11 + o) ? 'click active' : 'click'} on:click={() => tambahkan(n * 11 + o)}>\n\t\t\t\t\t\t<td>{n * 11 + o + 1}</td>\n\t\t\t\t\t\t<td>\n\t\t\t \t\t\t <ul>\n\t\t\t\t\t\t\t{#each Array(3) as _, p}\n\t\t\t\t\t\t\t\t<li>{@html data[n * 11 + o][p]}</li>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t </ul>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t{/each}\n\t\t\t</table>\n\t\t{/if}\n\t{/each}\n</div>\n<div class=\"footer\">\n\t<ul class=\"pagination justify-content-center\">\n\t\t{#each Array(9) as _, n}\n\t\t\t<li class={params.halaman == n + 1 ? 'active page-item' : 'page-item'}><a href=\"#/tes/{n + 1}\" class=\"page-link\">{n + 1}</a></li>\n\t\t{/each}\n\t</ul>\n</div>\n<script type=\"text/javascript\">\n\tlet bagian = 1\n\texport let params\n\timport {data} from '../data.js'\n\timport {onMount} from 'svelte'\n\tlet terkumpul = []\n\t$: if (params) {\n\t\twindow.scrollTo({\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tbehavior: 'smooth'\n\t\t})\n\t}\n\tonMount(() => {\n\t\tif (localStorage.japa) {\n\t\t\tlocalStorage.removeItem('japa')\n\t\t}\n\t})\n\tconst simpan = () => localStorage.setItem('japa', JSON.stringify(terkumpul))\n\tconst tambahkan = n => {\n\t\tif (terkumpul.includes(n)) {\n\t\t\tlet posisi = terkumpul.indexOf(n)\n\t\t\tterkumpul.splice(posisi, 1)\n\t\t\tterkumpul = terkumpul\n\t\t} else {\n\t\t\tterkumpul.push(n)\n\t\t\tterkumpul = terkumpul\n\t\t}\n\t}\n</script>\n<style type=\"text/css\">\n\t.footer {\n\t\tbackground: rgb(0, 150, 136);\n\t\tpadding: 10px;\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t}\n\t.footer .pagination,\n\t.header .pagination {\n\t\tmargin: 0;\n\t}\n\t.isi {\n\t\tmargin-top: 30px;\n\t\tmargin-bottom: 60px;\n\t}\n\t.header {\n\t\tbackground: rgb(0, 150, 136);\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\tpadding: 10px;\n\t}\n\t.click {\n\t\tcursor: pointer;\n\t}\n\t.click.active {\n\t\tbackground: rgb(255, 87, 34);\n\t\tcolor: white;\n\t}\n\t.tanpa-garis .page-link {\n\t\tborder: none;\n\t}\n</style>\n","<div class=\"container\">\n\t<br>\n\t<p>Beri peringkat pada pernyataan yang sudah kamu pilih tadi</p>\n\t<div class=\"table-responsive\">\n\t<table class=\"table table-bordered\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>No</th>\n\t\t\t\t<th>Pernyataan</th>\n\t\t\t\t<th>Rank</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{#each pilihan as x}\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{x + 1}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{#each data[x] as t}\n\t\t\t\t\t\t<li>\t{@html t}</li>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</ul>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type=\"tel\" class=\"form-control\" placeholder=\"1-7\">\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t{/each}\n\t\t</tbody>\n\t</table>\n\t</div>\n</div>\n<script type=\"text/javascript\">\n\timport {data} from '../data.js'\n\timport {onMount, afterUpdate} from 'svelte'\n\tlet pilihan = []\n\tonMount(() => {\n\t\tif (localStorage.japa) {\n\t\t\tpilihan = JSON.parse(localStorage.japa)\n\t\t}\n\t})\n\tafterUpdate(() => {\n\t\twindow.scrollTo({\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tbehavior: 'smooth'\n\t\t})\n\t})\n</script>\n","<Router {routes}/>\n<script type=\"text/javascript\">\n\timport Router from 'svelte-spa-router'\n\timport Beranda from './halaman/Beranda.svelte'\n\timport Instruksi from './halaman/Instruksi.svelte'\n\timport Tes from './halaman/Tes.svelte'\n\timport Atur from './halaman/Atur.svelte'\n\tconst routes = {\n\t\t'/': Beranda,\n\t\t'/instruksi': Instruksi,\n\t\t'/tes/:halaman': Tes,\n\t\t'/atur': Atur\n\t}\n</script>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","afterUpdate","after_update","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","key","undefined","get_spread_object","spread_props","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","readable","start","subscribe","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","store","unsub","unsubscribe","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","routes","prefix","restoreScrollState","RouteItem","path","_sveltesparouter","charAt","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","regexparam","conditions","userData","_pattern","_keys","startsWith","match","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","state","scrollY","scrollTo","scrollX","lastLoc","componentObj","newLoc","checkConditions","loading","loadingParams","loaded","default","history","scrollRestoration","includes","halaman","params","terkumpul","localStorage","japa","removeItem","tambahkan","posisi","top","left","behavior","setItem","JSON","stringify","wholeText","pilihan","parse","/","Beranda","/instruksi","Instruksi","/tes/:halaman","Tes","/atur","Atur","body"],"mappings":"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"}